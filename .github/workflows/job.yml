name: UCSSMonitor Job and Deploy

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  scrape_and_record:
    runs-on: ubuntu-latest
    outputs:
      remainingData: ${{ steps.run_scraper.outputs.remainingData }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run scraper
        id: run_scraper
        env:
          UCSS_EMAIL: ${{ secrets.UCSS_EMAIL }}
          UCSS_PASSWORD: ${{ secrets.UCSS_PASSWORD }}
        run: |
          # スクリプトの出力から remaining_data: の後の部分を抽出して変数に格納
          output=$(node scripts/scraper.js)
          remaining_data=$(echo "$output" | grep "remaining_data:" | sed 's/remaining_data://g')
          
          # 正しいフォーマットでoutputを設定
          echo "remainingData=${remaining_data}" >> $GITHUB_OUTPUT

      - name: Check scraper output
        run: |
          if [ "${{ steps.run_scraper.outputs.remainingData }}" = "" ]; then
            echo "Login might have failed or data not retrieved."
            exit 1
          fi

      - name: Update Gist
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          GIST_USER: ${{ secrets.GIST_USER }}
          GIST_ID: ${{ secrets.GIST_ID }}
          REMAINING_DATA: ${{ steps.run_scraper.outputs.remainingData }}
        run: node scripts/update_gist.js

  update_graph:
    needs: scrape_and_record
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Generate graph
        env:
          GIST_USER: ${{ secrets.GIST_USER }}
          GIST_ID: ${{ secrets.GIST_ID }}
          GH_PAT: ${{ secrets.GH_PAT }}
        run: npm run generate-graph

      - name: Verify index.html existence
        run: |
          if [ ! -f docs/index.html ]; then
            echo "Error: docs/index.html does not exist.";
            exit 1;
          fi

      - name: Verify index.html content
        run: |
          if ! grep -q '<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>' docs/index.html; then
            echo "Error: docs/index.html does not contain the expected Chart.js content.";
            exit 1;
          fi

  deploy:
    needs: update_graph
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Verify index.html exists
        run: |
          if [ ! -f docs/index.html ]; then
            echo "Error: index.html not found in docs directory.";
            exit 1;
          fi

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs
